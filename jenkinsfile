pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                // Check out the source code from the Git repository
                git 'https://github.com/lizbabz/JavaCalculator.git'
            }
        }

        stage('Build') {
            steps {
                // Only compile the project, do not package
                sh 'mvn clean compile'
            }
        }
        
        stage('Test') {
            steps {
                // Run unit tests and generate test reports
                sh 'mvn test'
                // Optionally, you can add steps to archive the test results or integrate with other tools
                junit '**/target/surefire-reports/TEST-*.xml'
            }
        }
        
        stage('Package') {
            steps {
                // Package the compiled code into a deployable artifact
                sh 'mvn package -DskipTests' // Skip tests because they were already run
            }
        }

        stage('Deploy') {
            steps {
                // Deploy using the Ansible playbook
                ansiblePlaybook(
                    playbook: '/home/ubuntu/JavaCalculator/webservers.yml',
                    inventory: '/home/ubuntu/JavaCalculator/hosts.ini',
                    credentialsId: 'aws-jenkins',
                    extras: ' -e ansible_python_interpreter=/usr/bin/python3'
                )
            }
        }
        
        stage('Post-Deployment Check') {
            steps {
                // Additional steps to verify deployment
                script {
                    echo "Checking application status..."
                    def response = sh(script: "curl -s -o /dev/null -w '%{http_code}' http://<IP_OF_WEBSERVER>/JavaWebCalculator/", returnStdout: true).trim()
                    if (response != '200') {
                        error "Failed to access the Java Web Calculator, response code: ${response}"
                    }
                }
            }
        }
    }

    post {
        always {
            // Actions to take in all cases after the pipeline finishes
            cleanWs()
        }
        success {
            // Actions to take on successful pipeline completion
            echo 'Deployment succeeded!'
        }
        failure {
            // Actions to take if the pipeline fails
            echo 'Deployment failed.'
            // Optionally, add notifications here as well
        }
    }
}
